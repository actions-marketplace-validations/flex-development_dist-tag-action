# Release
#
# Publish GitHub release when a `release/*` branch is merged into `main` or on
# workflow dispatch.
#
# References:
#
# - https://cli.github.com/manual/gh_release_create
# - https://docs.github.com/actions/learn-github-actions/contexts#github-context
# - https://docs.github.com/actions/learn-github-actions/expressions
# - https://docs.github.com/actions/using-workflows/events-that-trigger-workflows#pull_request
# - https://docs.github.com/ctions/using-workflows/using-github-cli-in-workflows
# - https://github.com/actions/checkout
# - https://github.com/actions/github-script
# - https://github.com/actions/setup-node
# - https://github.com/bdougie/close-issues-based-on-label
# - https://github.com/dawidd6/action-delete-branch
# - https://github.com/octokit/graphql-action
# - https://github.com/rickstaa/action-create-tag

---
name: release
on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:
    inputs:
      pr:
        description: pull request number
        required: true
      ref:
        description: commit to checkout
        required: true
      version:
        description: project version
        required: true
jobs:
  metadata:
    name: Metadata
    if: |
      github.event_name == 'workflow_dispatch' ||
      (startsWith(github.head_ref, 'release/')
      && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    outputs:
      artifact-path: ${{ steps.artifact.outputs.result }}
      message: ${{ steps.version.outputs.message }}
      pr: ${{ steps.pr.outputs.result }}
      prerelease: ${{ steps.prerelease.outputs.result }}
      ref: ${{ steps.ref.outputs.result }}
      scope: ${{ steps.workspace.outputs.scope }}
      tag: ${{ steps.version.outputs.tag }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: checkout
        name: Checkout main
        uses: actions/checkout@v3.0.2
        with:
          ref: main
      - id: workspace
        name: Get workspace
        uses: actions/github-script@v6.1.0
        with:
          script: |
            const scope = `@${context.repo.owner}`

            core.setOutput('scope', scope)
            core.setOutput('workspace', `${scope}/${context.repo.repo}`)
      - id: version
        name: Get version
        uses: actions/github-script@v6.1.0
        env:
          WORKSPACE: ${{ steps.workspace.outputs.workspace }}
        with:
          script: |
            const { payload, repo } = context
            const { inputs, pull_request } = payload

            const workspace = process.env.WORKSPACE

            let version

            if (pull_request) {
              version = pull_request.head.ref.split('release/')[1]
            }

            if (inputs) version = inputs.version

            core.setOutput('message', `release: ${workspace}@${version}`)
            core.setOutput('tag', version)
            core.setOutput('version', version)
      - id: artifact
        name: Get artifact path
        uses: actions/github-script@v6.1.0
        env:
          WORKSPACE: ${{ steps.workspace.outputs.workspace }}
          VERSION: ${{ steps.version.outputs.version }}
        with:
          result-encoding: string
          script: |
            const workspace = process.env.WORKSPACE
            const version = process.env.VERSION

            return `./${workspace.replace('/', '-')}-${version}.tgz`
      - id: dist-tag
        name: Get dist tag
        uses: ./
        with:
          target: ${{ steps.version.outputs.version }}
      - id: prerelease
        name: Check for prerelease
        uses: actions/github-script@v6.1.0
        env:
          DIST_TAG: ${{ steps.dist-tag.outputs.tag }}
        with:
          # todo: calculate number of prereleases to include in release notes
          script: return !!process.env.DIST_TAG
      - id: pr
        name: Get pull request number
        uses: actions/github-script@v6.1.0
        with:
          script: |
            const { inputs, pull_request } = context.payload
            return Number.parseInt(inputs?.pr ?? pull_request?.number ?? '0')
      - id: ref
        name: Get checkout ref
        uses: actions/github-script@v6.1.0
        with:
          result-encoding: string
          script: return context.payload.inputs?.ref ?? 'main'
  publish:
    name: Publish GitHub release
    needs: metadata
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NOTES_FILE: ./RELEASE_NOTES.md
    strategy:
      matrix:
        node: [16.16.0]
    steps:
      - id: checkout
        name: Checkout ${{ needs.metadata.outputs.ref }}
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
          ref: ${{ needs.metadata.outputs.ref }}
      - id: setup-node
        name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - id: yarn
        name: Install dependencies
        run: yarn
        env:
          HUSKY: 0
          NODE_AUTH_TOKEN: ${{ env.GITHUB_TOKEN }}
      - id: pack
        name: Pack project
        run: yarn pack -o %s-%v.tgz
        env:
          NODE_ENV: production
          NODE_NO_WARNINGS: 1
          NODE_OPTIONS: --es-module-specifier-resolution=node
      - id: release-notes
        name: Generate release notes
        # todo: handle prereleases
        run: yarn conventional-changelog -o $NOTES_FILE
        env:
          TS_NODE_PROJECT: ./tsconfig.tsnode.json
      - id: tag
        name: Create and push new tag
        uses: rickstaa/action-create-tag@v1.3.7
        with:
          force_push_tag: true
          message: ${{ needs.metadata.outputs.message }}
          tag: ${{ needs.metadata.outputs.tag }}
      - id: publish
        name: Create and publish release
        run: gh release create $TAG $ASSET -t=$TAG -F=$NOTES_FILE -p=$PRERELEASE
        env:
          ASSET: ${{ needs.metadata.outputs.artifact-path }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          PRERELEASE: ${{ needs.metadata.outputs.prerelease }}
          TAG: ${{ needs.metadata.outputs.tag }}
  cleanup:
    name: Cleanup
    needs: [metadata, publish]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - id: linked-issues
        name: Query linked issues
        uses: octokit/graphql-action@v2.2.22
        with:
          query: |
            query (
              $owner: String!,
              $repo: String!,
              $pr: Int!,
              $limit: Int = 20
            ) {
              repository(owner: $owner, name: $repo) {
                pullRequest(number: $pr) {
                  closingIssuesReferences(
                    first: $limit
                    orderBy: { direction: ASC, field: CREATED_AT }
                  ) {
                    edges {
                      node {
                        number
                      }
                    }
                  }
                }
              }
            }
          owner: ${{ github.repository_owner }}
          pr: ${{ needs.metadata.outputs.pr }}
          repo: ${{ github.event.repository.name }}
      - id: label-linked-issues
        name: Add status:released label to linked issues
        uses: actions/github-script@v6.1.0
        env:
          DATA: ${{ steps.linked-issues.outputs.data }}
        with:
          script: |
            const { pullRequest } = JSON.parse(process.env.DATA).repository
            const { edges } = pullRequest.closingIssuesReferences

            const issues = edges.map(edge => edge.node.number)

            for (const issue_number of issues) {
              await github.rest.issues.addLabels({
                ...context.repo,
                issue_number,
                labels: ['status:released']
              })
            }
      - id: close-released-issues
        name: Close issues with status:released label
        uses: bdougie/close-issues-based-on-label@master
        env:
          LABEL: status:released
      - id: delete-release-branch
        name: Delete branch release/${{ needs.metadata.outputs.version }}
        uses: dawidd6/action-delete-branch@v3.1.0
        with:
          branches: release/
          soft_fail: true
          suffix: ${{ needs.metadata.outputs.version }}
